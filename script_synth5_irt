{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"script_synth5_irt","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNPAJ4NoUW/UjJujO1d64l8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GesF9yUhg1Qx","executionInfo":{"status":"ok","timestamp":1623292449547,"user_tz":300,"elapsed":3896,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}},"outputId":"a08e63fe-9543-47a1-b056-afd61bd176fa"},"source":["!pip install tf-models-official==2.1.0.dev1"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Collecting tf-models-official==2.1.0.dev1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/2f/1d/0ed26743992cd2bbcd4defdc4b25ff314a61003b7853c5bdb7bc6863554a/tf_models_official-2.1.0.dev1-py2.py3-none-any.whl (805kB)\n","\u001b[K     |████████████████████████████████| 808kB 8.4MB/s \n","\u001b[?25hRequirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from tf-models-official==2.1.0.dev1) (1.15.0)\n","Installing collected packages: tf-models-official\n","Successfully installed tf-models-official-2.1.0.dev1\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"BbTm1zcKg1ok","executionInfo":{"status":"ok","timestamp":1623292453341,"user_tz":300,"elapsed":3811,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["import dkt_irt\n","import attn_irt\n","import sakt\n","import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras\n","from matplotlib import pyplot as plt\n","from sklearn.metrics import roc_auc_score"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"jTxktRcYLFlC","executionInfo":{"status":"ok","timestamp":1623292453346,"user_tz":300,"elapsed":29,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["from importlib import reload\n","reload(attn_irt)\n","reload(dkt_irt)\n","from attn_irt import ATTN_IRT\n","from dkt_irt import DKT_IRT"],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"33TgQyMs1-Zd"},"source":["# Read data"]},{"cell_type":"code","metadata":{"id":"pWAi2bksg1rG","executionInfo":{"status":"ok","timestamp":1623292454502,"user_tz":300,"elapsed":1179,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["# synth5\n","num_items = 50\n","num_skills = 5\n","num_students = 4000\n","max_len = 51\n","\n","responses = np.load('./data/synth5/synth5_resp0.npy') # response sequences can be found at https://github.com/chrispiech/DeepKnowledgeTracing/tree/master/data/synthetic\n","x_prob = np.zeros((num_students, max_len))\n","x_prob[:,0] = 2 #start token\n","for i in range(num_students):\n","  for j in range(num_items):\n","    if responses[i,j] < 1:\n","      x_prob[i, j+1] = 4 + 2 * j # wrong\n","    else:\n","      x_prob[i, j+1] = 5 + 2 * j # correct"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"8epc_-dFPxRk","executionInfo":{"status":"ok","timestamp":1623292454503,"user_tz":300,"elapsed":14,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["# shuffle order of all responses\n","permutation = np.zeros((num_students,num_items))\n","x_prob_permuted = np.zeros((num_students, max_len))\n","for i in range(num_students):\n","  responses = x_prob[i,1:]\n","  permutation[i,:] = np.random.permutation(responses)\n","x_prob_permuted[:,1:] = permutation\n","# x_prob_permuted = x_prob # uncomment if we want unshuffled data"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"KIuBcj0jhAYu","executionInfo":{"status":"ok","timestamp":1623292454504,"user_tz":300,"elapsed":11,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["y_true = np.zeros((num_students, max_len))\n","y_true[:,0:max_len-1] = x_prob_permuted[:,1:] # wrong -> even and correct -> odd\n","y_true[:,-1] = 3 # end token\n","y_true_binary = y_true % 2 \n","\n","y_prob2 = y_true + ((y_true+1) % 2)\n"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"HU1WZbYqhAdC","executionInfo":{"status":"ok","timestamp":1623292455233,"user_tz":300,"elapsed":457,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["# set up model parameters\n","params = {}\n","params['hidden_size'] = 64\n","params['lstm'] = True\n","params['1pl'] = True\n","params['dropout'] = 0.15\n","params['max_len'] = max_len\n","params['dtype'] = tf.float32\n","params['num_heads'] = 1\n","params['pos_enc'] = True \n","params['layer_norm'] = True\n","params['hid_activation'] = 'relu'\n","\n","# params dependent on data\n","params['encoder_vocab_size'] = num_items * 2 + 4\n","params['q_matrix'] = np.transpose(np.load('./data/synth5/q_matrix0.npy')) # this Q-matrix is constructed using the Synth-5 info files found at https://github.com/chrispiech/DeepKnowledgeTracing/tree/master/data/synthetic/info\n","params['num_items'] = num_items\n","params['num_skills'] = num_skills\n","\n","params['q_mask_attn'] = False"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"X3XEVInyhAjC","executionInfo":{"status":"ok","timestamp":1623292455243,"user_tz":300,"elapsed":22,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["# training parameters\n","batch_size = 64\n","learning_rate = 0.001 * batch_size / 128 * params['max_len'] / 128\n","num_epochs = 300\n","num_train = 3500\n","x_prob_train = x_prob_permuted[0:num_train,:]\n","y_prob2_train = y_prob2[0:num_train,:]\n","y_true_binary_train = y_true_binary[0:num_train,:]\n","x_prob_test = x_prob_permuted[num_train:,:]\n","y_prob2_test = y_prob2[num_train:,:]\n","y_true_binary_test = y_true_binary[num_train:,:]"],"execution_count":11,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zJ6xIuz613ap"},"source":["# Build and train model"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fLrpwA_Nx8Fi","executionInfo":{"status":"ok","timestamp":1623292460525,"user_tz":300,"elapsed":5299,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}},"outputId":"97d31bbd-ad7c-4f03-fd13-b90bcc30e09b"},"source":["# build model\n","model = ATTN_IRT(params) # For SAKT-IRT\n","# model = DKT_IRT(params) # For DKT-IRT\n","print(model.get_config())\n","model.compile(optimizer = tf.keras.optimizers.Adam(learning_rate = learning_rate), loss = 'binary_crossentropy')"],"execution_count":12,"outputs":[{"output_type":"stream","text":["{'params': DictWrapper({'hidden_size': 64, 'lstm': True, '1pl': True, 'dropout': 0.15, 'max_len': 51, 'dtype': tf.float32, 'num_heads': 1, 'pos_enc': True, 'layer_norm': True, 'hid_activation': 'relu', 'encoder_vocab_size': 104, 'q_matrix': array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0.,\n","        0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0.,\n","        0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1., 1., 0.,\n","        0., 0.],\n","       [0., 0., 1., 0., 0., 1., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0.,\n","        0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 1., 0., 1., 0., 0., 0.,\n","        1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0., 0.,\n","        0., 0.],\n","       [0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.,\n","        1., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 1.,\n","        0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1.,\n","        1., 1.],\n","       [1., 1., 0., 0., 0., 0., 0., 1., 1., 1., 0., 0., 0., 1., 0., 1.,\n","        0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 0.,\n","        0., 1., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","        0., 0.],\n","       [0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n","        0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0.,\n","        0., 0., 0., 1., 0., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0.,\n","        0., 0.]]), 'num_items': 50, 'num_skills': 5, 'q_mask_attn': False})}\n"],"name":"stdout"},{"output_type":"stream","text":["/content/gdrive/My Drive/act_work/irt/attn_irt.py:109: RuntimeWarning: divide by zero encountered in true_divide\n","  items_items = -1/items_items\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hB7Q2cyoG-Y3","executionInfo":{"status":"ok","timestamp":1623292555531,"user_tz":300,"elapsed":95030,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}},"outputId":"69bf3b97-29ce-4dfd-e9b0-a7b1fe75bfba"},"source":["history = model.fit([x_prob_train, y_prob2_train], y_true_binary_train,\n","                    epochs = num_epochs,\n","                    batch_size = batch_size,\n","                    verbose = 2)"],"execution_count":13,"outputs":[{"output_type":"stream","text":["Epoch 1/300\n","WARNING:tensorflow:AutoGraph could not transform <bound method ATTN_IRT.call of <attn_irt.ATTN_IRT object at 0x7f94b37792d0>> and will run it as-is.\n","Cause: code mixing tabs and spaces for indentation is not allowed\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n","WARNING: AutoGraph could not transform <bound method ATTN_IRT.call of <attn_irt.ATTN_IRT object at 0x7f94b37792d0>> and will run it as-is.\n","Cause: code mixing tabs and spaces for indentation is not allowed\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n","55/55 - 7s - loss: 0.9852\n","Epoch 2/300\n","55/55 - 0s - loss: 0.9732\n","Epoch 3/300\n","55/55 - 0s - loss: 0.9701\n","Epoch 4/300\n","55/55 - 0s - loss: 0.9668\n","Epoch 5/300\n","55/55 - 0s - loss: 0.9639\n","Epoch 6/300\n","55/55 - 0s - loss: 0.9601\n","Epoch 7/300\n","55/55 - 0s - loss: 0.9562\n","Epoch 8/300\n","55/55 - 0s - loss: 0.9518\n","Epoch 9/300\n","55/55 - 0s - loss: 0.9468\n","Epoch 10/300\n","55/55 - 0s - loss: 0.9407\n","Epoch 11/300\n","55/55 - 0s - loss: 0.9345\n","Epoch 12/300\n","55/55 - 0s - loss: 0.9286\n","Epoch 13/300\n","55/55 - 0s - loss: 0.9243\n","Epoch 14/300\n","55/55 - 0s - loss: 0.9211\n","Epoch 15/300\n","55/55 - 0s - loss: 0.9183\n","Epoch 16/300\n","55/55 - 0s - loss: 0.9159\n","Epoch 17/300\n","55/55 - 0s - loss: 0.9137\n","Epoch 18/300\n","55/55 - 0s - loss: 0.9114\n","Epoch 19/300\n","55/55 - 0s - loss: 0.9090\n","Epoch 20/300\n","55/55 - 0s - loss: 0.9069\n","Epoch 21/300\n","55/55 - 0s - loss: 0.9050\n","Epoch 22/300\n","55/55 - 0s - loss: 0.9031\n","Epoch 23/300\n","55/55 - 0s - loss: 0.9012\n","Epoch 24/300\n","55/55 - 0s - loss: 0.8993\n","Epoch 25/300\n","55/55 - 0s - loss: 0.8976\n","Epoch 26/300\n","55/55 - 0s - loss: 0.8968\n","Epoch 27/300\n","55/55 - 0s - loss: 0.8955\n","Epoch 28/300\n","55/55 - 0s - loss: 0.8939\n","Epoch 29/300\n","55/55 - 0s - loss: 0.8926\n","Epoch 30/300\n","55/55 - 0s - loss: 0.8915\n","Epoch 31/300\n","55/55 - 0s - loss: 0.8912\n","Epoch 32/300\n","55/55 - 0s - loss: 0.8891\n","Epoch 33/300\n","55/55 - 0s - loss: 0.8886\n","Epoch 34/300\n","55/55 - 0s - loss: 0.8874\n","Epoch 35/300\n","55/55 - 0s - loss: 0.8863\n","Epoch 36/300\n","55/55 - 0s - loss: 0.8860\n","Epoch 37/300\n","55/55 - 0s - loss: 0.8848\n","Epoch 38/300\n","55/55 - 0s - loss: 0.8836\n","Epoch 39/300\n","55/55 - 0s - loss: 0.8830\n","Epoch 40/300\n","55/55 - 0s - loss: 0.8819\n","Epoch 41/300\n","55/55 - 0s - loss: 0.8809\n","Epoch 42/300\n","55/55 - 0s - loss: 0.8797\n","Epoch 43/300\n","55/55 - 0s - loss: 0.8787\n","Epoch 44/300\n","55/55 - 0s - loss: 0.8774\n","Epoch 45/300\n","55/55 - 0s - loss: 0.8759\n","Epoch 46/300\n","55/55 - 0s - loss: 0.8736\n","Epoch 47/300\n","55/55 - 0s - loss: 0.8705\n","Epoch 48/300\n","55/55 - 0s - loss: 0.8668\n","Epoch 49/300\n","55/55 - 0s - loss: 0.8624\n","Epoch 50/300\n","55/55 - 0s - loss: 0.8590\n","Epoch 51/300\n","55/55 - 0s - loss: 0.8556\n","Epoch 52/300\n","55/55 - 0s - loss: 0.8533\n","Epoch 53/300\n","55/55 - 0s - loss: 0.8518\n","Epoch 54/300\n","55/55 - 0s - loss: 0.8504\n","Epoch 55/300\n","55/55 - 0s - loss: 0.8491\n","Epoch 56/300\n","55/55 - 0s - loss: 0.8481\n","Epoch 57/300\n","55/55 - 0s - loss: 0.8460\n","Epoch 58/300\n","55/55 - 0s - loss: 0.8456\n","Epoch 59/300\n","55/55 - 0s - loss: 0.8444\n","Epoch 60/300\n","55/55 - 0s - loss: 0.8430\n","Epoch 61/300\n","55/55 - 0s - loss: 0.8424\n","Epoch 62/300\n","55/55 - 0s - loss: 0.8414\n","Epoch 63/300\n","55/55 - 0s - loss: 0.8411\n","Epoch 64/300\n","55/55 - 0s - loss: 0.8399\n","Epoch 65/300\n","55/55 - 0s - loss: 0.8391\n","Epoch 66/300\n","55/55 - 0s - loss: 0.8387\n","Epoch 67/300\n","55/55 - 0s - loss: 0.8378\n","Epoch 68/300\n","55/55 - 0s - loss: 0.8372\n","Epoch 69/300\n","55/55 - 0s - loss: 0.8365\n","Epoch 70/300\n","55/55 - 0s - loss: 0.8360\n","Epoch 71/300\n","55/55 - 0s - loss: 0.8363\n","Epoch 72/300\n","55/55 - 0s - loss: 0.8353\n","Epoch 73/300\n","55/55 - 0s - loss: 0.8349\n","Epoch 74/300\n","55/55 - 0s - loss: 0.8341\n","Epoch 75/300\n","55/55 - 0s - loss: 0.8346\n","Epoch 76/300\n","55/55 - 0s - loss: 0.8341\n","Epoch 77/300\n","55/55 - 0s - loss: 0.8335\n","Epoch 78/300\n","55/55 - 0s - loss: 0.8335\n","Epoch 79/300\n","55/55 - 0s - loss: 0.8329\n","Epoch 80/300\n","55/55 - 0s - loss: 0.8328\n","Epoch 81/300\n","55/55 - 0s - loss: 0.8326\n","Epoch 82/300\n","55/55 - 0s - loss: 0.8321\n","Epoch 83/300\n","55/55 - 0s - loss: 0.8316\n","Epoch 84/300\n","55/55 - 0s - loss: 0.8316\n","Epoch 85/300\n","55/55 - 0s - loss: 0.8313\n","Epoch 86/300\n","55/55 - 0s - loss: 0.8300\n","Epoch 87/300\n","55/55 - 0s - loss: 0.8303\n","Epoch 88/300\n","55/55 - 0s - loss: 0.8299\n","Epoch 89/300\n","55/55 - 0s - loss: 0.8294\n","Epoch 90/300\n","55/55 - 0s - loss: 0.8288\n","Epoch 91/300\n","55/55 - 0s - loss: 0.8284\n","Epoch 92/300\n","55/55 - 0s - loss: 0.8274\n","Epoch 93/300\n","55/55 - 0s - loss: 0.8268\n","Epoch 94/300\n","55/55 - 0s - loss: 0.8268\n","Epoch 95/300\n","55/55 - 0s - loss: 0.8257\n","Epoch 96/300\n","55/55 - 0s - loss: 0.8253\n","Epoch 97/300\n","55/55 - 0s - loss: 0.8244\n","Epoch 98/300\n","55/55 - 0s - loss: 0.8238\n","Epoch 99/300\n","55/55 - 0s - loss: 0.8236\n","Epoch 100/300\n","55/55 - 0s - loss: 0.8227\n","Epoch 101/300\n","55/55 - 0s - loss: 0.8228\n","Epoch 102/300\n","55/55 - 0s - loss: 0.8216\n","Epoch 103/300\n","55/55 - 0s - loss: 0.8211\n","Epoch 104/300\n","55/55 - 0s - loss: 0.8204\n","Epoch 105/300\n","55/55 - 0s - loss: 0.8204\n","Epoch 106/300\n","55/55 - 0s - loss: 0.8200\n","Epoch 107/300\n","55/55 - 0s - loss: 0.8199\n","Epoch 108/300\n","55/55 - 0s - loss: 0.8192\n","Epoch 109/300\n","55/55 - 0s - loss: 0.8192\n","Epoch 110/300\n","55/55 - 0s - loss: 0.8191\n","Epoch 111/300\n","55/55 - 0s - loss: 0.8192\n","Epoch 112/300\n","55/55 - 0s - loss: 0.8186\n","Epoch 113/300\n","55/55 - 0s - loss: 0.8183\n","Epoch 114/300\n","55/55 - 0s - loss: 0.8175\n","Epoch 115/300\n","55/55 - 0s - loss: 0.8177\n","Epoch 116/300\n","55/55 - 0s - loss: 0.8171\n","Epoch 117/300\n","55/55 - 0s - loss: 0.8175\n","Epoch 118/300\n","55/55 - 0s - loss: 0.8169\n","Epoch 119/300\n","55/55 - 0s - loss: 0.8170\n","Epoch 120/300\n","55/55 - 0s - loss: 0.8165\n","Epoch 121/300\n","55/55 - 0s - loss: 0.8164\n","Epoch 122/300\n","55/55 - 0s - loss: 0.8165\n","Epoch 123/300\n","55/55 - 0s - loss: 0.8157\n","Epoch 124/300\n","55/55 - 0s - loss: 0.8159\n","Epoch 125/300\n","55/55 - 0s - loss: 0.8160\n","Epoch 126/300\n","55/55 - 0s - loss: 0.8150\n","Epoch 127/300\n","55/55 - 0s - loss: 0.8152\n","Epoch 128/300\n","55/55 - 0s - loss: 0.8147\n","Epoch 129/300\n","55/55 - 0s - loss: 0.8146\n","Epoch 130/300\n","55/55 - 0s - loss: 0.8147\n","Epoch 131/300\n","55/55 - 0s - loss: 0.8143\n","Epoch 132/300\n","55/55 - 0s - loss: 0.8144\n","Epoch 133/300\n","55/55 - 0s - loss: 0.8143\n","Epoch 134/300\n","55/55 - 0s - loss: 0.8141\n","Epoch 135/300\n","55/55 - 0s - loss: 0.8138\n","Epoch 136/300\n","55/55 - 0s - loss: 0.8140\n","Epoch 137/300\n","55/55 - 0s - loss: 0.8135\n","Epoch 138/300\n","55/55 - 0s - loss: 0.8137\n","Epoch 139/300\n","55/55 - 0s - loss: 0.8137\n","Epoch 140/300\n","55/55 - 0s - loss: 0.8128\n","Epoch 141/300\n","55/55 - 0s - loss: 0.8133\n","Epoch 142/300\n","55/55 - 0s - loss: 0.8128\n","Epoch 143/300\n","55/55 - 0s - loss: 0.8130\n","Epoch 144/300\n","55/55 - 0s - loss: 0.8124\n","Epoch 145/300\n","55/55 - 0s - loss: 0.8126\n","Epoch 146/300\n","55/55 - 0s - loss: 0.8126\n","Epoch 147/300\n","55/55 - 0s - loss: 0.8119\n","Epoch 148/300\n","55/55 - 0s - loss: 0.8124\n","Epoch 149/300\n","55/55 - 0s - loss: 0.8130\n","Epoch 150/300\n","55/55 - 0s - loss: 0.8121\n","Epoch 151/300\n","55/55 - 0s - loss: 0.8119\n","Epoch 152/300\n","55/55 - 0s - loss: 0.8121\n","Epoch 153/300\n","55/55 - 0s - loss: 0.8115\n","Epoch 154/300\n","55/55 - 0s - loss: 0.8114\n","Epoch 155/300\n","55/55 - 0s - loss: 0.8116\n","Epoch 156/300\n","55/55 - 0s - loss: 0.8116\n","Epoch 157/300\n","55/55 - 0s - loss: 0.8113\n","Epoch 158/300\n","55/55 - 0s - loss: 0.8115\n","Epoch 159/300\n","55/55 - 0s - loss: 0.8111\n","Epoch 160/300\n","55/55 - 0s - loss: 0.8109\n","Epoch 161/300\n","55/55 - 0s - loss: 0.8114\n","Epoch 162/300\n","55/55 - 0s - loss: 0.8108\n","Epoch 163/300\n","55/55 - 0s - loss: 0.8105\n","Epoch 164/300\n","55/55 - 0s - loss: 0.8105\n","Epoch 165/300\n","55/55 - 0s - loss: 0.8105\n","Epoch 166/300\n","55/55 - 0s - loss: 0.8099\n","Epoch 167/300\n","55/55 - 0s - loss: 0.8098\n","Epoch 168/300\n","55/55 - 0s - loss: 0.8107\n","Epoch 169/300\n","55/55 - 0s - loss: 0.8098\n","Epoch 170/300\n","55/55 - 0s - loss: 0.8098\n","Epoch 171/300\n","55/55 - 0s - loss: 0.8092\n","Epoch 172/300\n","55/55 - 0s - loss: 0.8087\n","Epoch 173/300\n","55/55 - 0s - loss: 0.8084\n","Epoch 174/300\n","55/55 - 0s - loss: 0.8086\n","Epoch 175/300\n","55/55 - 0s - loss: 0.8078\n","Epoch 176/300\n","55/55 - 0s - loss: 0.8078\n","Epoch 177/300\n","55/55 - 0s - loss: 0.8060\n","Epoch 178/300\n","55/55 - 0s - loss: 0.8058\n","Epoch 179/300\n","55/55 - 0s - loss: 0.8052\n","Epoch 180/300\n","55/55 - 0s - loss: 0.8041\n","Epoch 181/300\n","55/55 - 0s - loss: 0.8033\n","Epoch 182/300\n","55/55 - 0s - loss: 0.8029\n","Epoch 183/300\n","55/55 - 0s - loss: 0.8024\n","Epoch 184/300\n","55/55 - 0s - loss: 0.8015\n","Epoch 185/300\n","55/55 - 0s - loss: 0.8006\n","Epoch 186/300\n","55/55 - 0s - loss: 0.8007\n","Epoch 187/300\n","55/55 - 0s - loss: 0.7997\n","Epoch 188/300\n","55/55 - 0s - loss: 0.7997\n","Epoch 189/300\n","55/55 - 0s - loss: 0.7993\n","Epoch 190/300\n","55/55 - 0s - loss: 0.7998\n","Epoch 191/300\n","55/55 - 0s - loss: 0.7990\n","Epoch 192/300\n","55/55 - 0s - loss: 0.7984\n","Epoch 193/300\n","55/55 - 0s - loss: 0.7989\n","Epoch 194/300\n","55/55 - 0s - loss: 0.7982\n","Epoch 195/300\n","55/55 - 0s - loss: 0.7978\n","Epoch 196/300\n","55/55 - 0s - loss: 0.7984\n","Epoch 197/300\n","55/55 - 0s - loss: 0.7983\n","Epoch 198/300\n","55/55 - 0s - loss: 0.7970\n","Epoch 199/300\n","55/55 - 0s - loss: 0.7980\n","Epoch 200/300\n","55/55 - 0s - loss: 0.7975\n","Epoch 201/300\n","55/55 - 0s - loss: 0.7974\n","Epoch 202/300\n","55/55 - 0s - loss: 0.7974\n","Epoch 203/300\n","55/55 - 0s - loss: 0.7975\n","Epoch 204/300\n","55/55 - 0s - loss: 0.7973\n","Epoch 205/300\n","55/55 - 0s - loss: 0.7972\n","Epoch 206/300\n","55/55 - 0s - loss: 0.7970\n","Epoch 207/300\n","55/55 - 0s - loss: 0.7970\n","Epoch 208/300\n","55/55 - 0s - loss: 0.7968\n","Epoch 209/300\n","55/55 - 0s - loss: 0.7968\n","Epoch 210/300\n","55/55 - 0s - loss: 0.7969\n","Epoch 211/300\n","55/55 - 0s - loss: 0.7965\n","Epoch 212/300\n","55/55 - 0s - loss: 0.7966\n","Epoch 213/300\n","55/55 - 0s - loss: 0.7963\n","Epoch 214/300\n","55/55 - 0s - loss: 0.7962\n","Epoch 215/300\n","55/55 - 0s - loss: 0.7962\n","Epoch 216/300\n","55/55 - 0s - loss: 0.7962\n","Epoch 217/300\n","55/55 - 0s - loss: 0.7961\n","Epoch 218/300\n","55/55 - 0s - loss: 0.7959\n","Epoch 219/300\n","55/55 - 0s - loss: 0.7967\n","Epoch 220/300\n","55/55 - 0s - loss: 0.7965\n","Epoch 221/300\n","55/55 - 0s - loss: 0.7961\n","Epoch 222/300\n","55/55 - 0s - loss: 0.7955\n","Epoch 223/300\n","55/55 - 0s - loss: 0.7961\n","Epoch 224/300\n","55/55 - 0s - loss: 0.7953\n","Epoch 225/300\n","55/55 - 0s - loss: 0.7959\n","Epoch 226/300\n","55/55 - 0s - loss: 0.7959\n","Epoch 227/300\n","55/55 - 0s - loss: 0.7958\n","Epoch 228/300\n","55/55 - 0s - loss: 0.7959\n","Epoch 229/300\n","55/55 - 0s - loss: 0.7958\n","Epoch 230/300\n","55/55 - 0s - loss: 0.7954\n","Epoch 231/300\n","55/55 - 0s - loss: 0.7961\n","Epoch 232/300\n","55/55 - 0s - loss: 0.7959\n","Epoch 233/300\n","55/55 - 0s - loss: 0.7963\n","Epoch 234/300\n","55/55 - 0s - loss: 0.7952\n","Epoch 235/300\n","55/55 - 0s - loss: 0.7959\n","Epoch 236/300\n","55/55 - 0s - loss: 0.7954\n","Epoch 237/300\n","55/55 - 0s - loss: 0.7953\n","Epoch 238/300\n","55/55 - 0s - loss: 0.7951\n","Epoch 239/300\n","55/55 - 0s - loss: 0.7953\n","Epoch 240/300\n","55/55 - 0s - loss: 0.7960\n","Epoch 241/300\n","55/55 - 0s - loss: 0.7952\n","Epoch 242/300\n","55/55 - 0s - loss: 0.7951\n","Epoch 243/300\n","55/55 - 0s - loss: 0.7951\n","Epoch 244/300\n","55/55 - 0s - loss: 0.7951\n","Epoch 245/300\n","55/55 - 0s - loss: 0.7950\n","Epoch 246/300\n","55/55 - 0s - loss: 0.7953\n","Epoch 247/300\n","55/55 - 0s - loss: 0.7943\n","Epoch 248/300\n","55/55 - 0s - loss: 0.7952\n","Epoch 249/300\n","55/55 - 0s - loss: 0.7951\n","Epoch 250/300\n","55/55 - 0s - loss: 0.7954\n","Epoch 251/300\n","55/55 - 0s - loss: 0.7952\n","Epoch 252/300\n","55/55 - 0s - loss: 0.7949\n","Epoch 253/300\n","55/55 - 0s - loss: 0.7951\n","Epoch 254/300\n","55/55 - 0s - loss: 0.7954\n","Epoch 255/300\n","55/55 - 0s - loss: 0.7945\n","Epoch 256/300\n","55/55 - 0s - loss: 0.7946\n","Epoch 257/300\n","55/55 - 0s - loss: 0.7953\n","Epoch 258/300\n","55/55 - 0s - loss: 0.7950\n","Epoch 259/300\n","55/55 - 0s - loss: 0.7945\n","Epoch 260/300\n","55/55 - 0s - loss: 0.7949\n","Epoch 261/300\n","55/55 - 0s - loss: 0.7948\n","Epoch 262/300\n","55/55 - 0s - loss: 0.7946\n","Epoch 263/300\n","55/55 - 0s - loss: 0.7943\n","Epoch 264/300\n","55/55 - 0s - loss: 0.7945\n","Epoch 265/300\n","55/55 - 0s - loss: 0.7940\n","Epoch 266/300\n","55/55 - 0s - loss: 0.7945\n","Epoch 267/300\n","55/55 - 0s - loss: 0.7948\n","Epoch 268/300\n","55/55 - 0s - loss: 0.7943\n","Epoch 269/300\n","55/55 - 0s - loss: 0.7946\n","Epoch 270/300\n","55/55 - 0s - loss: 0.7946\n","Epoch 271/300\n","55/55 - 0s - loss: 0.7939\n","Epoch 272/300\n","55/55 - 0s - loss: 0.7944\n","Epoch 273/300\n","55/55 - 0s - loss: 0.7940\n","Epoch 274/300\n","55/55 - 0s - loss: 0.7946\n","Epoch 275/300\n","55/55 - 0s - loss: 0.7947\n","Epoch 276/300\n","55/55 - 0s - loss: 0.7944\n","Epoch 277/300\n","55/55 - 0s - loss: 0.7936\n","Epoch 278/300\n","55/55 - 0s - loss: 0.7944\n","Epoch 279/300\n","55/55 - 0s - loss: 0.7940\n","Epoch 280/300\n","55/55 - 0s - loss: 0.7942\n","Epoch 281/300\n","55/55 - 0s - loss: 0.7939\n","Epoch 282/300\n","55/55 - 0s - loss: 0.7938\n","Epoch 283/300\n","55/55 - 0s - loss: 0.7935\n","Epoch 284/300\n","55/55 - 0s - loss: 0.7943\n","Epoch 285/300\n","55/55 - 0s - loss: 0.7938\n","Epoch 286/300\n","55/55 - 0s - loss: 0.7944\n","Epoch 287/300\n","55/55 - 0s - loss: 0.7939\n","Epoch 288/300\n","55/55 - 0s - loss: 0.7937\n","Epoch 289/300\n","55/55 - 0s - loss: 0.7943\n","Epoch 290/300\n","55/55 - 0s - loss: 0.7938\n","Epoch 291/300\n","55/55 - 0s - loss: 0.7935\n","Epoch 292/300\n","55/55 - 0s - loss: 0.7937\n","Epoch 293/300\n","55/55 - 0s - loss: 0.7944\n","Epoch 294/300\n","55/55 - 0s - loss: 0.7947\n","Epoch 295/300\n","55/55 - 0s - loss: 0.7939\n","Epoch 296/300\n","55/55 - 0s - loss: 0.7932\n","Epoch 297/300\n","55/55 - 0s - loss: 0.7936\n","Epoch 298/300\n","55/55 - 0s - loss: 0.7935\n","Epoch 299/300\n","55/55 - 0s - loss: 0.7940\n","Epoch 300/300\n","55/55 - 0s - loss: 0.7936\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":265},"id":"g8XXRZslTaXG","executionInfo":{"status":"ok","timestamp":1623292555697,"user_tz":300,"elapsed":193,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}},"outputId":"63a82067-cc97-4d64-9321-cfa17fe50d3f"},"source":["plt.scatter(np.linspace(1,num_epochs+1,num_epochs), history.history['loss'])\n","plt.show()"],"execution_count":14,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"CLpMmxaHx8IC","executionInfo":{"status":"ok","timestamp":1623292555699,"user_tz":300,"elapsed":11,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["W = model.get_weights()\n","diff_est = W[-1]\n","\n","# save model weights\n","# np.save('synth5_disc_est_.npy', W[-2]) # for synth5, this is just Q-matrix\n","# np.save('synth5_diff_est_attn.npy', W[-1])\n","# model.save_weights('synth5_trained_weights_attn.h5')"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0CwwSxHWx8Ki","executionInfo":{"status":"ok","timestamp":1623292555700,"user_tz":300,"elapsed":12,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}},"outputId":"6b40dee6-1fa5-4e77-ca00-94e35be94028"},"source":["model.summary()"],"execution_count":16,"outputs":[{"output_type":"stream","text":["Model: \"attn_irt\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding (Embedding)        multiple                  6656      \n","_________________________________________________________________\n","self_attention (SelfAttentio multiple                  16384     \n","_________________________________________________________________\n","layer_normalization (LayerNo multiple                  128       \n","_________________________________________________________________\n","hidden_layer (Dense)         multiple                  650       \n","_________________________________________________________________\n","skill_layer (Dense)          multiple                  55        \n","_________________________________________________________________\n","problem_layer (Dense)        multiple                  300       \n","=================================================================\n","Total params: 24,173\n","Trainable params: 24,173\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"9LFcgzF61wP-"},"source":["# Analyze Results"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IgNvevGOXTJr","executionInfo":{"status":"ok","timestamp":1623292555889,"user_tz":300,"elapsed":198,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}},"outputId":"4434ae08-ed55-4f1c-a5e4-b2037e0c786b"},"source":["test_preds = model([x_prob_test, y_prob2_test])\n","test_true = y_true_binary_test\n","pred_array = np.reshape(test_preds, (num_students-num_train) * params['max_len'])\n","true_array = np.reshape(test_true, (num_students-num_train) * params['max_len'])\n","test_auc = roc_auc_score(true_array, pred_array)\n","print(test_auc)"],"execution_count":17,"outputs":[{"output_type":"stream","text":["0.8005079050084488\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"V_h-WurY0FNT","executionInfo":{"status":"ok","timestamp":1623292556064,"user_tz":300,"elapsed":181,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["synth5_info = np.load('data/synth5/synth5_info0.npy')"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":308},"id":"4sX0nLV30Ndi","executionInfo":{"status":"ok","timestamp":1623292556319,"user_tz":300,"elapsed":273,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}},"outputId":"9e0ddd8a-b111-46e3-dc5f-abfe8459e8a3"},"source":["plt.scatter(synth5_info[:,0], diff_est, c='blue')\n","plt.title('Item Difficulty Parameters', fontsize=20)\n","plt.xlabel('True values', fontsize=17)\n","plt.ylabel('Estimates', fontsize=17)\n","plt.show()"],"execution_count":20,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"u-W6Ap6lEunX","executionInfo":{"status":"ok","timestamp":1623292556321,"user_tz":300,"elapsed":22,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["plt.rcParams[\"figure.figsize\"] = (7,7)"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RYXGzmrrcVOg","executionInfo":{"status":"ok","timestamp":1623292556322,"user_tz":300,"elapsed":22,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}},"outputId":"988f8c11-c8ee-4c33-94fc-372fdc7d3738"},"source":["print(x_prob_train[0,:])\n","print(y_true_binary_train[0,:])\n","preds = model([x_prob_train[0:1,:], y_prob2_train[0:1,]])\n","preds"],"execution_count":22,"outputs":[{"output_type":"stream","text":["[  0.  36.  18.  83.  31.  75.  50.  94.  89.  71.  12.   4.  66.  25.\n","  62.  97.  41.  90.  23.  84.  43.  59.  76.  99.  87.  53.  93.  65.\n","  33.  21.   7.  17.  81.  78.  73.  26.  61.  49.  45.  15.  39.  69.\n"," 100.  57.  46. 103.  35.  10.  28.  54.   9.]\n","[0. 0. 1. 1. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 1. 1. 0. 1. 1.\n"," 1. 1. 1. 1. 1. 1. 1. 1. 0. 1. 0. 1. 1. 1. 1. 1. 1. 0. 1. 0. 1. 1. 0. 0.\n"," 0. 1. 1.]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(1, 51), dtype=float32, numpy=\n","array([[0.6408447 , 0.5190132 , 0.49768263, 0.5270722 , 0.5044284 ,\n","        0.6439129 , 0.5757806 , 0.5664172 , 0.59802747, 0.47929388,\n","        0.32954866, 0.60018975, 0.8373389 , 0.39023396, 0.6539747 ,\n","        0.6665463 , 0.58956355, 0.64490145, 0.2652648 , 0.7103273 ,\n","        0.7118763 , 0.29601917, 0.15837868, 0.3064442 , 0.9025384 ,\n","        0.87168723, 0.7212565 , 0.761556  , 0.7378918 , 0.5372836 ,\n","        0.8847531 , 0.14889085, 0.9517155 , 0.5858777 , 0.49225944,\n","        0.8846448 , 0.83458024, 0.94326144, 0.72546333, 0.97551525,\n","        0.86030316, 0.4052263 , 0.9728857 , 0.46062467, 0.4396468 ,\n","        0.93132985, 0.11910629, 0.2116033 , 0.17490797, 0.8532034 ,\n","        0.        ]], dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"kZ9503Shp0sb","executionInfo":{"status":"ok","timestamp":1623292556659,"user_tz":300,"elapsed":7,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["# student responses from Figure 6 of DKVMN paper\n","# hard-coding a specific response sequence used in other literature\n","fig6_responses = [2,2,2,1,2,1,1,2,2,2,1,1,2,2,2,2,2,1,2,1,2,2,2,1,1,2,1,2,1,2,2,2,1,2,2,2,2,2,1,1,2,2,1,2,1,1,2,2,2,2]\n","fig6_prob_x = [2,4,6,8,9,12,13,15,18,20,22,23,25,28,30,32,34,36,37,40,41,44,46,48,49,51,54,55,58,59,62,64,66,67, \n","              70,72,74,76,78,79,81,84,86,87,90,91,93,96,98,100,102] #cut off last entry because start token at front\n","fig6_prob_x = fig6_prob_x + np.ones(51)\n","fig6_prob_x[0] = 2\n","fig6_student = np.reshape(fig6_prob_x, (1,51))"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"vZlVG1EhqxQO","executionInfo":{"status":"ok","timestamp":1623292556659,"user_tz":300,"elapsed":6,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["fig6_skills = model.get_skills(fig6_student)\n","fig6_skills = np.array(fig6_skills[0,:,:])"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"id":"39GhdPzSzkM2","executionInfo":{"status":"ok","timestamp":1623292556660,"user_tz":300,"elapsed":7,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}}},"source":["perm = [0,4,2,1,3] # permute the skill ordering to match previous literature\n","idx = np.empty_like(perm)\n","idx[perm] = np.arange(len(perm))\n","rearranged_fig6 = fig6_skills[:,idx]"],"execution_count":26,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":101},"id":"_F_oNVEbrDMj","executionInfo":{"status":"ok","timestamp":1623292556897,"user_tz":300,"elapsed":243,"user":{"displayName":"Geoff Converse","photoUrl":"","userId":"07654985356593283891"}},"outputId":"1db6c876-98f9-473b-a1ab-80becef264b8"},"source":["# plt.imshow([fig6_responses], cmap='gray')\n","# plt.show()\n","plt.imshow(np.transpose(rearranged_fig6), cmap='RdYlGn')\n","plt.xlabel('exercise sequence')\n","plt.ylabel('concept')\n","ax = plt.gca()\n","ax.axes.yaxis.set_ticks([])\n","plt.show()"],"execution_count":27,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAaUAAABUCAYAAAAiayimAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAQKUlEQVR4nO3de5AmVX3G8e8zs3Pbnb2yy8JeuAaCuBAUUAkWKirhKikB0ZIKilUxhDIkFSslakypYJViiIGYFF64JIARFQxREsAFA0UMd1hgAbmtXBZ2lr3vzl5mZ375o8/AME6f7pfdl33XeT5VWztvn+7T5z1vd5+3+/2dcxQRmJmZtYK2HV0AMzOzYW6UzMysZbhRMjOzluFGyczMWoYbJTMzaxlulMzMrGW4UTIzs5YxoRmZzpzUGXtOm1iaHluHStOGMmkAalc+fUJ7aVpbT/7txmC+z1Z2350VVamK9j8y73tgMLvp0LrN+bzby/etjny5NLknn/dQps62bs1vW6W7uzwtV18AVf3vcslt+WNsaNnabLp6O8oTt+Q/y0pt5Z9XbMnXd1tvZzY9NmfKNmEbv79mqlTK13cMVnzWuWtGpr4AYnO+zgYzn1d7R/m1po7BzHndXnGtoqJKctfRtorje+umfJ3k8m7vytfJotX9r0TErNw6tRolSadFxI+qlg3bc9pE7jz7qNL8Bl/ZWJrW39efLUvX1PyJ1bHrpNK0zgUzs9sOrduSTW+bXL5vzds1uy3dXfn0TZmGpW9ldtONC5dk09uml1/cJ8wpry+A9qMWZNPZlKmzinJXXfz1lv1L02LjhnzeQ1UXsswFuDt/jG246OZses+Rc8t3+8K67LZV2iaWN3gDz67Jbtvz7nnZ9IEl5du3Z46hYoX8Z5lLV1f+MjS0clM2fXBV+fUkV18AA0+tzqave778C8ik3fLnTpX1S9eXpk1bkL1uExUNx6bMdbQj96UJWPnrVdn0/uXleU/fd1p2292vu/s32RWo//juvJrLzMzM3rDsVxRJxwHHA3MlXTwiaQqwjc9mzMzMXq/q8d1S4F7gQ8B9I5avA/6qWYUyM7PxKdsoRcRDwEOSrqH4qfIAip+In4iI/A8wZmZmDaobffdB4FLgaYrGaW9Jn46I/2payczMbNxRnakrJD0OnBgRT6XX+wI/j4gDxlr/sAVz4+6f/Hlpfl3/cmNp2tZcWCowdd6UbPpuc8rTp1ZE+bxvz8nZ9PfOm16atnZLPmpwydqBbPr9yyrCujOmV4SPzuwuj2fp25iPUsttC/BQX3nkU29nPjx0sOLY+8M55eHo8zORkAAzu/Of5cv95VFXKzfl6+S5dfmfU/eYXP55TO7MR6nN7y0/xgD6NpZHyPV25CPkhirqe0pneX3P7MnXZ/9A/vjdMlR+Xj++anl224GKrhrTu8uPs80V4eRdme4SAAfOKI9YfGD5c9ltd+ku7xYD8Mya8ui7rgn54+Sds+dn03smlB8LXe35cq0fyEdx9vWXRySuH8hHSp60z0X3RcRhuXXqRt+tG26QkmcoflcyMzPbbuo+vrtX0o3AtRS/KZ0G3CPpwwARcV2TymdmZuNI3UapG1gGvCe9Xg70ACdRNFJulMzMbJvVapQi4pPNLoiZmVmt35Qk7S9poaRH0uuDJX2xuUUzM7Pxpm6gw3cphhUaAIiIRcBHm1UoMzMbn+o2ShMj4u5RyzzMkJmZbVd1Ax1eSX2TAkDSqcBLZSsPdHbw0rzZpZltOT8zQtHqpfmSDOYHkhi87YHyxKoxKJ4p73MD0NZX3tciNx0HgKb15ved64uRmY4DgKH8qL/aIzPadn9FZH/FvjU/01+oM98fgq0VH8iUzMjr3fn+amyoGKE893EMVXzfGqxIz0yXMDBtt+ymHZvy/d2YWz4K89qB/Huesjo/IjbdmUrpqjh+2youJe3l6UdMrihXRf+r7HG2MT/NCJvL+wpV7futvRXH96QZ+fRZme0rrnOV72sgc4xOzs+WsGlKfjT53SaW19n0rorZErioIr1+o3QO8B3gAEkvAs8CZ9Tc1szMrJa60XfPAB+QNAloiwh3nDUzs+2ubvTd1yRNi4gNEbFO0nRJ5ze7cGZmNr7UDXQ4LiJeffAbEaso5lkyMzPbbuo2Su2SXp3PW1IPUDG/t5mZWWPqBjpcDSyUdHl6/UngyuYUyczMxqu6gQ5fl7QIeH9a9NWIuKls/XZNYEpHeTjkWsrDp6fMLg9fBmBlfrj49lNOLk17noow4W3Q21EeqgswpTMfHtq+MROauv6V/M57KsKjMzQhPwVEZahvLly3Kqy1Ksw4FzK+9uX8tlVh27P2KU+rmIZkqDMfohxRfnx3qKI+oyJEOdNlYkpFKPuaqfnjZOrW8rJtaMvnPWlCPjx6y1D5lAYDFVPKrNiUP+fXrCsPKe+v6HYwr3dONn1GV3mdvdCbz3vJ2oez6S+sL48X66h4htU/kJ/O46CZ5aHZS19+PLvtE6vy05AcPrv8WjdBdR++lat7p0Sa0M+T+pmZWdPUjb77sKQnJa2RtFbSOkkVvbfMzMwaU/dO6RvASRHxWDMLY2Zm41vdB4DL3CCZmVmzNTLz7A+BnwKv/grmGWfNzGx7qtsoTQH6gWNGLPOMs2Zmtl155lkzM2sZtRolSfOAS4Aj06I7gHMj4oUx1+9bQefFV5XmN9Q/UJrWv7K8PwPAxC98rKK05eb35vtAxYO3ZdM3fO/O0rRVT+WH39/Qrmx6Z295f6GtmfoC2Lq5fEoNgKGB8n4zMZTv7zA4kM97MLPvrin5QT/aKjpjbFxRPpXIihX5cq/dhtjQiRUzEszZI3/a9C0t79MzsSef99qqmUQyu+6vmPWiyuo15Wm9k/LbVhxGtOUP/23KOze7Sm9FV7hflU7AU5gxvTxtWV9+2478jDLMnfzG9gvw5NP59BWZvNsruvAdUtF1sT1zWvdUnDt11A10uBy4AZiT/v1nWmZmZrbd1G2UZkXE5RGxNf27ApjVxHKZmdk4VLdRWiHpDEnt6d8ZwIpmFszMzMafuo3SWcBHgJcppkE/FfhEk8pkZmbjVN2Q8K8AZ6Z5lJA0A/gmRWNlZma2XdS9Uzp4uEECiIiVwNuaUyQzMxuv6jZKbZJeDVJMd0q1Rxg3MzOrQxEVnQAASX8CfB74UVp0GnBBRPxbyfrLgd+MWDQTqJgUyEZxnTXG9dU411ljXF+NG11ne0ZENnK7VqMEIOlA4Oj08taIWFy3VJLujYjD6q5vrrNGub4a5zprjOurcW+kzhqZ5G8xULshMjMza9S2z11rZma2nbxZjdJ33qT9/C5xnTXG9dU411ljXF+Na7jOav+mZGZm1mx+fGdmZi2j6Y2SpGMlPSHpKUmfa/b+djaSLpPUJ+mREctmSLpF0pPp/4qB7McXSfMl3SZpsaRHJZ2blrvexiCpW9Ldkh5K9fXltHxvSXelc/OHkiomLRh/0lifD0j6WXrtOishaYmkhyU9KOnetKzhc7KpjZKkduDbwHHAgcDHUmi5veYK4NhRyz4HLIyI/YCF6bW9Zivw1xFxIPAu4Jx0XLnexrYZODoi/gA4BDhW0ruArwP/EBG/B6wCPrUDy9iqzgUeG/HadZb3vog4ZEQYeMPnZLPvlN4BPBURz0TEFuDfgZObvM+dSkTcDqwctfhk4Mr095XAH7+phWpxEfFSRNyf/l5HcdGYi+ttTFFYn152pH9B0e/wx2m562uUNLnpCcD30mvhOmtUw+dksxulucDzI16/kJZZ3uyIGJ4T82Vg9o4sTCuTtBfFOIx34XorlR5DPQj0AbcATwOrI2J4HlKfm7/tW8DfAMNTN++C6ywngJsl3SfpT9Oyhs9Jj1/X4iIiJDlEcgySeoGfAH8ZEWuLL7IF19vrRcQgcIikacD1wAE7uEgtTdKJQF9E3CfpvTu6PDuJd0fEi5J2BW6R9PjIxLrnZLPvlF4E5o94PS8ts7xlknYHSP/37eDytBxJHRQN0tURcV1a7HqrEBGrgduAI4Bpkoa/mPrcfL0jgQ9JWkLxs8PRwD/iOisVES+m//sovvi8gzdwTja7UboH2C9FrHQCHwVuaPI+fxfcAJyZ/j4T+I8dWJaWk57tfx94LCIuGpHkehuDpFnpDglJPcAHKX6Hu41iwk5wfb1ORJwXEfMiYi+K69atEfFxXGdjkjRJ0uThv4FjgEd4A+dk0zvPSjqe4tlsO3BZRFzQ1B3uZCT9AHgvxWi6y4C/A34KXAvsQTHa+kfSHFYGSHo3cAfwMK897/88xe9KrrdRJB1M8SNzO8UX0Wsj4iuS9qG4C5gBPACcERGbd1xJW1N6fPfZiDjRdTa2VC/Xp5cTgGsi4gJJu9DgOekRHczMrGV4RAczM2sZbpTMzKxluFEyM7OW4UbJzMxahhslMzNrGW6UzMYg6cbhvj1m9uZxSLiNW5ImjBjHzMxagO+UbKch6Yw0L9CDki5Ng4weLmlRmjNoUpovaEH6+7K0/gOSTk55fELSDZJuBRZK6pV0eZoHZpGkU9J6SyTNTPn8PM1F9Iik01P6oZL+Jw0+edPwUCqjynta2uYhSbenZe2SLpR0T9rfp9NySfonFXOP/SLdqZ06sizp78Mk/TL9nXuP10n67zSPzTdGlOlYSfenMi3M5WO2I3hAVtspSHoLcDpwZEQMSPpn4OMR8a+SbgDOB3qAqyLiEUlfoxga5qz0GO5uSb9I2b0dODgiVkr6OrAmIg5K+xk9CdmxwNKIOCGlT03j7l0CnBwRy1NDdQFw1qhtvwT8URqkcvhR4KfS/g6X1AXcKelmipHOf59i3rHZwGLgsopq+ULmPR6S8twMPCHpEmAT8F3gqIh4VtKMXD4RsaFi/2bbnRsl21m8HzgUuKcY+o4eXhvc8SsU4yxuAv4iLTuGYkDNz6bX3RRDnQDcMmKokw9QjG0GQESsGrXfh4G/T43XzyLiDkkLgAUUIyFDMXzPS/y2O4ErJF0LDA8aewxw8PBdEDAV2A84CvhBGs17abqTq5J7jwsjYg2ApMXAnsB04PaIeDa915UV+Yyc3M7sTeFGyXYWAq6MiPPGSNsF6KWYvK4b2JDWPyUinnhdJtI7U3otEfFrSW8HjgfOT4+8rgcejYgjKrb9s7S/E4D7JB2ayvWZiLhpVLmOz2S1ldcetXeP3Izy9zhyPLZB8uf6mPmY7Qj+Tcl2FguBU1XM1YKkGZL2TGmXAn8LXE0xXTXATcBnlG5lJL2tJN9bgHOGX4x+fCdpDtAfEVcBF1I8+nsCmCXpiLROh6S3js5Y0r4RcVdEfAlYTjGNy03A2ekRIJL2VzGq8u3A6ek3p92B943IagnFXSLAKSOW132Pw/4POErS3mn94cd3jeZj1jS+U7KdQkQslvRFipkt24AB4BxJ7wEGIuIaSe3A/0o6Gvgqxej0i9L6zwInjpH1+cC3JT1CcUfxZV571AZwEHChpKG0z7MjYkt6/HaxpKkU59G3gEdH5X2hpP0o7kQWAg8Bi4C9gPtTI7CcYoro6ynm7FkMPAf8akQ+Xwa+L+mrwC9HLK/7HofrcLmKGUGvS+v3UUxj0VA+Zs3kkHCzFiTpCorfsH68o8ti9mby4zszM2sZvlMyM7OW4TslMzNrGW6UzMysZbhRMjOzluFGyczMWoYbJTMzaxlulMzMrGX8P5ZFHGabyhB2AAAAAElFTkSuQmCC\n","text/plain":["<Figure size 504x504 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]}]}